@using System.Reflection;
@using Microsoft.AspNetCore.Components.Routing;
@using Microsoft.AspNetCore.Components.WebAssembly.Services;
@inject LazyAssemblyLoader assemblyLoader;
@*@inject HttpClient Http;*@
@inject LoadAssembliesService loadAssembliesService

<Router AppAssembly="@typeof(App).Assembly" PreferExactMatches="@true" AdditionalAssemblies="@lazyLoadedAssemblies" OnNavigateAsync="@OnNavigateAsync">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>


@code {
    private List<Assembly> lazyLoadedAssemblies = new List<Assembly>();
    
    private async Task OnNavigateAsync(NavigationContext args)
    {
        try
        {
            if (args.Path == "counter")
            {
                IEnumerable<string> fileNames = loadAssembliesService.GetCounterAssemblies();
                if (fileNames != null)
                {
                    IEnumerable<Assembly> assemblies = await assemblyLoader.LoadAssembliesAsync(fileNames);
                    lazyLoadedAssemblies.AddRange(assemblies);
                }
            }
            if (args.Path == "fetchdata")
            {
                IEnumerable<string> fileNames = loadAssembliesService.GetWeatherAssemblies();
                if (fileNames != null)
                {
                    IEnumerable<Assembly> assemblies = await assemblyLoader.LoadAssembliesAsync(fileNames);
                    lazyLoadedAssemblies.AddRange(assemblies);
                }
            }
            if (args.Path == "componentrefexample")
            {
                IEnumerable<string> fileNames = loadAssembliesService.GetComponentRefAssemblies();
                if (fileNames != null)
                {
                    IEnumerable<Assembly> assemblies = await assemblyLoader.LoadAssembliesAsync(fileNames);
                    lazyLoadedAssemblies.AddRange(assemblies);
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Excetion: {ex.Message}");
        }
    }
}